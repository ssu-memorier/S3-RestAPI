"""
Django settings for djangoRestAPI project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import json
from pathlib import Path
from dotenv import load_dotenv
import os

from constants import KEY

load_dotenv()   # load .env
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
key = os.environ.get(KEY.DJANGOKEY)

# Django Secret
engine = os.environ.get("ENGINE")

# DB Secret
name = os.environ.get("NAME")
user = os.environ.get("USER")
password = os.environ.get("PASSWORD")
host = os.environ.get("HOST")
port = os.environ.get("PORT")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = f'django-insecure-{key}'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apiUser.apps.ApiUserConfig',
    'rest_framework',
    'corsheaders',  # CORS 관련 추가
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',     # CORS 관련 추가
]

CORS_ORIGIN_WHITELIST = ['http://0.0.0.0:8080', 'http://localhost:8080',
                         'http://127.0.0.1:3000', 'http://localhost:3000',
                         "https://gomgukstorage.paas-ta.org",
                         "https://gomguk.net",
                         "https://ssu-memorier.github.io",
                         "http://gomguk-fe-development.s3-website.ap-northeast-2.amazonaws.com",
                         "http://gomguk.net.s3-website.ap-northeast-2.amazonaws.com",
                         ]

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "POST",
    "PUT",
]

ROOT_URLCONF = 'djangoRestAPI.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangoRestAPI.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# if 'VCAP_SERVICES' in os.environ:
#     vcap_services = json.loads(os.environ['VCAP_SERVICES'])

#     if 'Mysql-DB' in vcap_services:
#         mysql_srv = vcap_services['Mysql-DB'][0]
#         mysql_cred = mysql_srv['credentials']

#         DATABASES = {
#             'default': {
#                 'ENGINE': 'django.db.backends.mysql',
#                 'NAME': mysql_cred['name'],
#                 'USER': mysql_cred['username'],
#                 'PASSWORD': mysql_cred['password'],
#                 'HOST': mysql_cred['hostname'],
#                 'PORT': mysql_cred['port'],
#             },
#         }


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "op_eaf7cfc0_2b84_4f08_ba86_ee5c8f4cd6a5",
        'USER': "99c8fbbcc22dc1f4",
        'PASSWORD': "7931d76bf99cb50f",
        'HOST': "10.0.40.143",
        'PORT': "13307",
    },
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'
USE_TZ = True

USE_I18N = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
