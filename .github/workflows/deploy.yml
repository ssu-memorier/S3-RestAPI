# This is a basic workflow to help you get started with Actions

name: Production Deploy CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setting .env
        run: |
          echo "DjangoKey=$DJANGO_KEY" >> .env
          echo "AwsAccessKeyId=$AWSACCESSKEYID" >> .env
          echo "AwsSecretAccessKey=$AWSSECRETACCESSKEY" >> .env
          echo "AwsStorageBucketName=$AWSSTORAGEBUCKET" >> .env
          echo "AuthUrl=$AUTH_URL" >> .env
        env:
          DJANGO_KEY: ${{ secrets.DJANGO_KEY }}
          AWSACCESSKEYID: ${{ secrets.AWS_ACCESSKEYID }}
          AWSSECRETACCESSKEY: ${{ secrets.AWS_SECRETACCESSKEY }}
          AWSSTORAGEBUCKET: ${{ secrets.AWS_STORAGEBUCKET }}
          AUTH_URL: ${{ secrets.AUTH_URL }}

      - name: CloudFoundry push application with different directory
        uses: jiwonii97/cf-push@main
        with:
          appdir: "." # use the appdir option to select a specif folder where the cf app is stored
          api: ${{ secrets.PAAS_TA_URL }}
          org: ${{ secrets.PAAS_TA_ORG }}
          space: ${{ secrets.PAAS_TA_SPACE }}
          username: ${{ secrets.PAAS_TA_USER }}
          password: ${{ secrets.PAAS_TA_PASSWORD }}
          appname: ${{ secrets.PAAS_TA_APPNAME }}
          manifest: manifest.yml
          validate: true
